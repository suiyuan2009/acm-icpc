/×
题意：求0!到n!中有多少个数的十进制表示末尾0的个数是偶数个

对于因子2的个数是富足，5的个数是决定性的，n!是否有偶数个尾数0只需要不断除以5之后看加和是否是偶数
写成5进制之后用数位dp模拟加和的过程，由于5^k是奇数，所以加和的奇偶性只需看各个位上的奇偶性
×/
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cmath>
#include <cstring>
#include <string>
#include <queue>
using namespace std;
typedef long long ll;
const int maxn = 105;
const int inf = 0x3fffffff;

ll f[maxn][2][2], n;
int a[maxn], m, g[maxn][2][2];

void init()
{
    m = 0;
    if (n == 0LL)a[++m] = 0;
    else
    {
        while (n)
        {
            a[++m] = n % 5;
            n /= 5;
        }
    }
    memset(g, 0, sizeof(g));
}

ll dfs(int x, int y, int z)
{
    if (g[x][y][z])return f[x][y][z];
    if (x == 0)
    {
        g[x][y][z] = 1;
        if (z == 0)return f[x][y][z] = 1;
        return f[x][y][z] = 0;
    }
    int lim = a[x];
    if (y == 1)lim = 4;
    ll ret = 0;
    for (int i = 0; i <= lim; i++)
        ret += dfs(x - 1, y || ((!y) && i < lim), (z + i * (x - 1)) & 1);
    g[x][y][z] = 1;
    return f[x][y][z] = ret;
}

int main()
{
    //freopen("in.cpp", "r", stdin);
    //freopen("out.cpp", "w", stdout);
    while (scanf("%lld", &n) && n != -1)
    {
        init();
        printf("%lld\n", dfs(m, 0, 0));
    }
    return 0;
}
