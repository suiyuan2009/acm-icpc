/×
题意：最多修改一个整数， 最长上升子串长度是多少

记f[i]为以i为开始的最长上升子串长度，那么枚举i，可以修改f[i]+i-1以及f[i]+i，注意总是可以修改一个数，也就是答案总可以是f[i]+1
×/
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cmath>
#include <cstring>
#include <string>
#include <queue>
using namespace std;
typedef long long ll;
const int maxn = 100005;
const int inf = 0x3fffffff;

int n, a[maxn], f[maxn];

int main()
{
    // freopen("in.cpp", "r", stdin);
    //freopen("out.cpp", "w", stdout);
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        scanf("%d", &a[i]);
    f[n] = 1;
    for (int i = n - 1; i >= 1; i--)
    {
        if (a[i] < a[i + 1])f[i] = f[i + 1] + 1;
        else f[i] = 1;
    }
    int ret = min(n, 2);
    for (int i = 1; i <= n; i++)
    {
        ret = max(ret, f[i]);
        int pos = i + f[i] - 1;
        if (f[i] == 1)
        {
            if (pos < n)ret = max(ret, 1 + f[pos + 1]);
        }
        else
        {
            if (pos < n)
            {
                ret = max(ret, f[i] + 1);
                if (f[pos + 1] == 1)ret = max(ret, f[i] + 1);
                else
                {
                    if (a[pos - 1] + 1 < a[pos + 1] || a[pos] + 1 < a[pos + 2])
                        ret = max(ret, f[i] + f[pos + 1]);
                }
            }
        }
    }
    printf("%d\n", ret);
    return 0;
}
