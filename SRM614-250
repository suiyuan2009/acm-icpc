/*
题意：给出n个二维坐标，找出面积最小的正方形，使得至少有K个点严格在正方形内。
枚举两点+二分，枚举的其实是正方形左下角的坐标
*/
#include <stdio.h>
#include <string>
#include <string.h>
#include <vector>
#include <algorithm>
#include <math.h>
#include <queue>
#include <map>
using namespace std;
typedef long long ll;
const double eps = 1e-6;
const double PI = acos(-1);
const int maxn=105;
const int inf = 0x3fffffff;
const int mod=1000000007;

bool test(ll x1,ll y1,ll x2,ll y2,ll x,ll y)
{
    return x>x1&&x<x2&&y>y1&&y<y2;
}

class MinimumSquare
{
public:
    long long minArea(vector <int> x, vector <int> y, int K)
    {
        ll ret=-1;
        int n=x.size();
        for(int i=0; i<n; i++)
            for(int j=i; j<n; j++)
            {
                ll x1=min(x[i],x[j])-1,y1=min(y[i],y[j])-1;
                ll l=2,r=(ll)mod+mod;
                ll ans=-1;
                while(l<=r)
                {
                    ll m=((l+r)>>1LL);
                    int cnt=0;
                    for(int k=0; k<n; k++)
                        if(test(x1,y1,x1+m,y1+m,x[k],y[k]))cnt++;
                    if(cnt>=K)
                    {
                        ans=m;
                        r=m-1;
                    }
                    else l=m+1;
                }
                if(ans!=-1)
                {
                    if(ret==-1||ret>ans)ret=ans;
                }
            }
        return ret*ret;
    }
};
