//#pragma comment(linker,"/STACK:10240000000,10240000000")
#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<vector>
#include<cmath>
#include<set>
#include<ctime>
using namespace std;
const int maxn = 65;
const int maxm = 1005;
const int inf = 0x3fffffff;
typedef long long ll;

char str[maxm];
int n,m,st,a[maxm][30],b[maxm][30],c[maxm][30];
bool ed[maxm];
int len;

void init(){
    m=strlen(str);
    scanf("%d%d",&n,&st);
    for(int i=1;i<=n;i++){
        ed[i]=0;
        for(int j=1;j<=m;j++)
            c[i][j]=0;
    }
    int cnt=0;
    scanf("%d",&cnt);
    while(cnt--){
        int x;
        scanf("%d",&x);
        ed[x]=1;
    }
    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            scanf("%d",&a[i][j]);
    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            scanf("%d",&b[i][j]);
    scanf("%d",&len);
}

int dfs(int x,int y){
    if(c[x][y]==-1)return c[x][y];
    if(!b[x][y]){
        return c[x][y]=a[x][y];
    }
    c[x][y]=-1;
    return c[x][y]=dfs(a[x][y],y);
}

void init_2(){
    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            if(!c[i][j])dfs(i,j);
}

const int base=100000000;
const int width=8;
const int N=1000;
struct bint{
    int ln,v[N];
    bint(int r=0){
        for(ln=0;r>0;r/=base)v[ln++]=r%base;
    }
    void setv(int r=0){
        for(ln=0;r>0;r/=base)v[ln++]=r%base;
    }
    bint& operator=(const bint&r){
        memcpy(this,&r,(r.ln+1)*sizeof(int));
        return *this;
    }
}f[2][maxm];
bint operator+(const bint&a,const bint&b){
    bint res;int i,cy=0;
    for(i=0;i<a.ln||i<b.ln||cy>0;i++){
        if(i<a.ln)cy+=a.v[i];
        if(i<b.ln)cy+=b.v[i];
        res.v[i]=cy%base;cy/=base;
    }
    res.ln=i;
    return res;
}
void write(const bint&v){
    int i;
    printf("%d",v.ln==0?0:v.v[v.ln-1]);
    for(i=v.ln-2;i>=0;i--)
        printf("%08d",v.v[i]);
    printf("\n");
}

void solve(){
    for(int i=0;i<=0;i++)
        for(int j=0;j<=n;j++)
            f[i][j].setv();
    f[0][st].setv(1);
    bint ret;
    int cur=0;
    for(int i=0;i<len;i++){
        cur^=1;
        for(int j=0;j<=n;j++)
            f[cur][j].setv();
        for(int j=1;j<=n;j++){
            for(int k=1;k<=m;k++){
                int tt=c[j][k];
                if(tt<=0)continue;
                f[cur][tt]=f[cur][tt]+f[1-cur][j];
            }
        }
    }
    for(int i=1;i<=n;i++)
        if(ed[i])ret=ret+f[cur][i];
    write(ret);
}

int main(){
    //freopen("ACM/in.in","r",stdin);
    int T;
    scanf("%d",&T);
    while(T--){
        scanf("%s",str);
        init(),init_2();
        solve();
        if(T)puts("");
    }
    return 0;
}
