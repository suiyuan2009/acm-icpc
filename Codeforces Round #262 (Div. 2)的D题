/*
题意：从[l,r]中最多选k个数，问异或值最小是多少

连续两个数的异或值为1，连续4个数的异或值为0
三个不同的数异或值为0，可以是11000,10111,01111
*/
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<string>
#include<iostream>
#include<queue>
#include<stack>
#include<cmath>
#include<map>
using namespace std;
typedef long long ll;
const int maxn=15;

ll ret,ans[maxn],l,r,n,c;

void solve1(int m){
    for(int i=0;i<(1<<m);i++){
        ll cur=0,cnt=0;
        for(int j=0;j<m;j++)
            if(i&(1<<j)){
                cur^=(l+j);
                cnt++;
            }
        if(cnt<=n&&cnt){
            if(ret==-1||ret>cur){
                ret=cur;
                c=0;
                for(int j=0;j<m;j++)
                    if(i&(1<<j))ans[c++]=l+j;
            }
        }
    }
}

void solve2(){
    ll tt=l;
    if(ret==-1||ret>l){
        ret=l;
        c=1;
        ans[0]=l;
    }
    if(n>1){
        if(l&1)tt++;
        if(ret==-1||ret>1){
            ret=1;
            c=2;
            ans[0]=tt,ans[1]=tt+1;
        }
    }
    if(n>2){
        for(int i=1;i<50;i++){
            ll z=(1LL<<i)-1;
            ll y=(1LL<<i)+(z>>1);
            ll x=(1LL<<i)+(1LL<<i-1);
            //printf("%d: %lld %lld %lld\n",i,z,y,x);
            if(x<=r&&x>=l&&y<=r&&y>=l&&z<=r&&z>=l){
                ret=0;
                c=3;
                ans[0]=z,ans[1]=y,ans[2]=x;
            }
        }
    }
}

int main(){
    //freopen("ACM/in.in","r",stdin);
    //freopen("ACM/out.out","w",stdout);  
    scanf("%lld%lld%lld",&l,&r,&n);
    ret=-1;
    if(r-l<=4)solve1((int)(r-l+1));
    else{
        if(n>=4){
            ret=0,c=4;
            if(l&1)l++;
            for(int j=0;j<4;j++)
                ans[j]=j+l;
        }
        else solve2();
    }
    printf("%lld\n%lld\n",ret,c);
    for(int i=0;i<c;i++)
        printf("%lld%c",ans[i],i==c-1?'\n':' ');
    return 0;
}
