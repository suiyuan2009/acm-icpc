/*
题意：背包容量2^26，共150件物品，问选的物品和是否可能在min和max之间
由于max/(max-min)<=60000，所以分成最多60000段，
每一段记录达到这一段时最小可以是多少，最大可以是多少
*/
//#pragma comment(linker, "/STACK:102400000,102400000")
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<iostream>
#include<vector>
#include<cmath>
#include<map>
#include<queue>
#include<stack>
#include<iomanip>
#include<sstream>
using namespace std;
#define eps 1e-8
typedef long long ll;
const int inf=0x3f3f3f3f;
const int maxn=155;
const int maxm=60005;

int f[maxm][2];
int n,a[maxn];
int l,h;

void pd(int k,int tt)
{
    if(f[k][0]==-1||f[k][0]>tt)
        f[k][0]=tt;
    if(f[k][1]==-1||f[k][1]<tt)
        f[k][1]=tt;
}

int main()
{
    int T;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d%d",&l,&h,&n);
        for(int i=1; i<=n; i++)scanf("%d",&a[i]);
        if(l==0)printf("Sallow swallow swallows.");
        else
        {
            memset(f,-1,sizeof(f));
            f[0][0]=f[0][1]=0;
            int d=h-l+1;
            int m=(h+d-1)/d;
            int mod=h%d;
            for(int i=0; i<n; i++)
                for(int j=m; j>=0; j--)
                {
                    if(f[j][0]==-1)continue;
                    int low=f[j][0],high=f[j][1];
                    int tt=low+a[i+1];
                    int k=(tt+d-1-mod)/d;
                    if(mod)k++;
                    if(tt<=h)pd(k,tt);
                    tt=(high+a[i+1]);
                    k=(tt+d-1-mod)/d;
                    if(mod)k++;
                    if(tt<=h)pd(k,tt);
                }
            if(f[m][0]==-1)printf("Sallow swallow wallows in dust.");
            else printf("Sallow swallow swallows.");
        }
        if(T)printf("\n");
    }
    return 0;
}
