/*
题意：n个点形成的二分图，边可以黑白两种颜色，求方案数，点有编号
记f[i]为i个点时的答案，g[i][j]为i个点和j个点形成的二分联通图的方案
先计算g[i][j]，可以用总的方案减去不联通的，枚举点1所在的联通块就行，然后f[i]的计算还是枚举点1所在二分联通块
*/
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<string>
#include<iostream>
#include<queue>
#include<cmath>
#include<map>
#include<stack>
using namespace std;
typedef long long ll;
const int maxn = 105;
const int mod=175781251;
const double eps=1e-8;

ll c[maxn][maxn],f[maxn],g[maxn][maxn],p[maxn*maxn],q[maxn*maxn];
void init(){
    for(int i=0;i<maxn;i++)c[i][0]=c[i][i]=1;
    for(int i=1;i<maxn;i++)
        for(int j=1;j<i;j++)
            c[i][j]=(c[i-1][j-1]+c[i-1][j])%mod;
    p[0]=q[0]=1;
    for(int i=1;i<maxn*maxn;i++)p[i]=p[i-1]*3%mod,q[i]=q[i-1]*2%mod;
    for(int i=1;i<maxn;i++)g[i][1]=g[1][i]=q[i];
    g[1][0]=1;
    for(int i=2;i<maxn;i++)
        for(int j=2;j<maxn;j++){
            g[i][j]=(p[i*j]+mod-p[(i-1)*j])%mod;
            for(int k=1;k<=i;k++)
                for(int r=1;r<=j;r++){
                    if(k==i&&r==j)continue;
                    g[i][j]=(g[i][j]+mod-g[k][r]*p[(i-k)*(j-r)]%mod*c[i-1][k-1]%mod*c[j][r]%mod)%mod;
                }
        }
    f[0]=1;
    for(int i=1;i<maxn;i++)
        for(int j=1;j<=i;j++)
            for(int k=0;k<=i-j;k++){
                f[i]=(f[i]+g[j][k]*f[i-j-k]%mod*c[i-1][j-1]%mod*c[i-j][k]%mod)%mod;
            }
}

int ans[100]={
    1,3,19,249,5881,246603,17583259,45888717,163310,19515357,120600562,94532668,170068731,113380982,116314918,135722253,92496699,168632607,52943590,139540378,149403433,20634661,154635245,44748413,84449088,76425331,149271011,110788855,81817469,2743628,110868665,168766695,140536132,32089451,119863612,76960464,14335986,149457208,119159917,175375275,99675999,78268439,111791244,49829108,132662391,167561368,140745695,16427738,71378034,157505566,145934042,67970766,82925837,20732309,93432484,120931438,58274270,59850134,109772495,161179483,163330949,18585968,169254656,140518812,6438206,95467049,18316107,81469154,31504149,57468720,89860784,31868343,6359733,62866159,63021931,61701285,121439335,9844799,66966541,2087735,75221537,98353329,155592893,6627787,92242499,126867400,61127277,79596297,109879421,52188793,161169615,109178107,74250061,11154070,175542153,19488904,11217798,102077943,163957726,150441759
};

int main() {
    // freopen("ACM/in.in", "r", stdin);
    freopen("bipartite.in","r",stdin);
    freopen("bipartite.out","w",stdout);
    init();
    int n;
    //for(int i=1;i<=100;i++)printf("%lld,",f[i]);
    while(scanf("%d",&n)&&n)printf("%lld\n",f[n]);
    return 0;
}
