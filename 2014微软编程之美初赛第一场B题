#include <stdio.h>
#include <string>
#include <string.h>
#include <vector>
#include <algorithm>
#include <math.h>
#include <queue>
#include <map>
#include <stack>
#include <iostream>
using namespace std;
typedef long long ll;
const double eps = 1e-10;
const double PI = acos(-1);
const int maxn = 100005;
const int inf = 0x3fffffff;
const int mod = 1000000007;

int n,m;
vector<int>g[maxn];
int c[maxn];
struct P
{
    int l,r,det;
    P() {}
    P(int _l,int _r,int _det)
    {
        l=_l,r=_r,det=_det;
    }
};
vector<P>f[maxn];

struct BIT
{
    int c[maxn];
    void init()
    {
        for(int i=0; i<maxn; i++)c[i]=0;
    }
    int lowbit(int x)
    {
        return x&(-x);
    }
    void add(int x,int val)
    {
        while(x<maxn)
        {
            c[x]+=val;
            if(c[x]<0)c[x]+=mod;
            if(c[x]>=mod)c[x]-=mod;
            x+=lowbit(x);
        }
    }
    int sum(int x)
    {
        int ret=0;
        while(x>0)
        {
            ret+=c[x];
            if(ret>=mod)ret-=mod;
            x-=lowbit(x);
        }
        return ret;
    }
} bit;

void init(int n)
{
    bit.init();
    for(int i=1; i<=n; i++)g[i].clear();
    for(int i=1; i<=n; i++)c[i]=0;
    for(int i=1; i<=n; i++)f[i].clear();
}

void dfs(int u,int fa,int d)
{
    for(int i=0; i<f[u].size(); i++)
    {
        bit.add(f[u][i].l,f[u][i].det);
        bit.add(f[u][i].r+1,-f[u][i].det);
    }
    c[u]=bit.sum(d);
    if(c[u]<0)c[u]+=mod;
    if(c[u]>=mod)c[u]-=mod;
    for(int i=0; i<g[u].size(); i++)
    {
        int v=g[u][i];
        if(v==fa)continue;
        dfs(v,u,d+1);
    }
    for(int i=0; i<f[u].size(); i++)
    {
        bit.add(f[u][i].l,-f[u][i].det);
        bit.add(f[u][i].r+1,f[u][i].det);
    }
}

int main()
{
    //freopen("in.cpp","r",stdin);
    // freopen("out.cpp","w",stdout);
    int T,ncase=0;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d",&n);
        init(n);
        for(int i=2; i<=n; i++)
        {
            int x;
            scanf("%d",&x);
            g[x].push_back(i);
        }
        scanf("%d",&m);
        while(m--)
        {
            int u,l,r,det;
            scanf("%d%d%d%d",&u,&l,&r,&det);
            f[u].push_back(P(l,r,det));
        }
        dfs(1,0,1);
        ll MAGIC= 12347;
        ll Hash=0;
        // for(int i=1;i<=n;i++)
        //   printf("%d: %d\n",i,c[i]);
        for(int i=1; i<=n; i++)
            Hash = (Hash * MAGIC + c[i])%mod;
        printf("Case %d: %lld\n",++ncase,Hash);
    }
    return 0;
}
