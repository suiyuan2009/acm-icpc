/*
骨牌覆盖
轮廓线dp，逐格dp
*/
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<string>
#include<iostream>
#include<queue>
#include<stack>
#include<cmath>
#include<map>
using namespace std;
typedef long long ll;
const int maxn=11;

int n,m;
ll f[2][1<<maxn];

int main(){
  //  freopen("ACM/in.in","r",stdin);
    //freopen("ACM/out.out","w",stdout);
    while(scanf("%d%d",&n,&m)){
        if(n+m==0)break;
        memset(f,0,sizeof(f));
        f[0][(1<<m)-1]=1;
        int cur=0;
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++){
                cur^=1;
                int now=cur;
                int pre=1-cur;
                memset(f[now],0,sizeof(f[now]));
                for(int k=0;k<(1<<m);k++){
                    if(k&(1<<j)){
                        f[now][k^(1<<j)]+=f[pre][k];
                        if(j&&(!(k&(1<<j-1))))f[now][k|(1<<j-1)]+=f[pre][k];
                    }
                    else f[now][k|(1<<j)]+=f[pre][k];
                }
            }
        printf("%lld\n",f[cur][(1<<m)-1]);
    }
    return 0;
}
