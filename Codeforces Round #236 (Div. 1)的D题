/*
The sequence of integer pairs (a1, b1), (a2, b2), ..., (ak, bk) is beautiful, if the following statements are fulfilled:
1 ≤ a1 ≤ b1 < a2 ≤ b2 < ... < ak ≤ bk ≤ n, where n is a given positive integer;
all numbers b1 - a1, b2 - a2, ..., bk - ak are distinct.
For the given number n find the number of beautiful sequences of length k. As the answer can be rather large, print the remainder after dividing it by 1000000007 (109 + 7).

f[i][j]代表i个数和为j的方案数，可以由i个数每个数+1得到，也可以由i-1个数每个数+1，然后添加1得到。
*/
#include <cstdio>
#include <string>
#include <cstring>
#include <vector>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <stack>
using namespace std;
typedef __int64 ll;
const double eps = 1e-8;
const double PI = acos(-1);
const int maxn = 1005;
const int maxm=2005;
const int inf = 0x3fffffff;
const int mod = 1000000007;

ll f[maxn][maxn],A[maxn],C[maxm][maxm];
int n,k;

void init()
{
    A[0]=1;
    for(int i=1; i<maxn; i++)
        A[i]=A[i-1]*i%mod;
    for(int i=0; i<maxm; i++)C[i][i]=C[i][0]=1;
    for(int i=1; i<maxm; i++)
        for(int j=1; j<i; j++)
        {
            C[i][j]=C[i-1][j-1]+C[i-1][j];
            if(C[i][j]>=mod)C[i][j]-=mod;
        }
    f[0][0]=1;
    for(int i=1; i<maxn; i++)
        for(int j=i; j<maxn; j++)
        {
            f[i][j]=f[i-1][j-i]+f[i][j-i];
            if(f[i][j]>=mod)f[i][j]-=mod;
        }
}

int main()
{
    //freopen("in.cpp","r",stdin);
    init();
    int T;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d",&n,&k);
        ll ret=0;
        for(int i=k*(k+1)/2; i<=n; i++)
        {
            ret=ret+f[k][i]*C[n+k-i][k]%mod;
            if(ret>=mod)ret-=mod;
        }
        printf("%I64d\n",ret*A[k]%mod);
    }
    return 0;
}
