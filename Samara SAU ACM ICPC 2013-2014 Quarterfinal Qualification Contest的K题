/*
题意：主要解决的就是n个点中，对于每个点计算小于它的点数
陈丹琦分治
*/
//#pragma comment(linker, "/STACK:102400000,102400000")
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<iostream>
#include<vector>
#include<cmath>
#include<map>
#include<queue>
#include<stack>
#include<iomanip>
#include<sstream>
using namespace std;
#define eps 1e-7
typedef __int64 ll;
const int inf=0x3f3f3f3f;
const int maxn=200005;

int n;
struct P
{
    int x,y,z;
    P() {}
    P(int _x,int _y,int _z)
    {
        x=_x,y=_y,z=_z;
    }
    bool operator<(const P&a)const
    {
        return x<a.x;
    }
} p[maxn],q[maxn];

struct BIT
{
    int c[maxn];
    int lowbit(int x)
    {
        return x&(-x);
    }
    void clr(int x)
    {
        while(x<=n)
        {
            c[x]=0;
            x+=lowbit(x);
        }
    }
    void pd(int x)
    {
        while(x<=n)
        {
            c[x]++;
            x+=lowbit(x);
        }
    }
    int query(int x)
    {
        int ret=0;
        while(x>0)
        {
            ret+=c[x];
            x-=lowbit(x);
        }
        return ret;
    }
} bit;

int f[maxn];
void solve(int l,int r)
{
    if(l==r)return;
    int m=(l+r)/2;
    solve(l,m);
    int cnt_q=0;
    for(int i=l; i<=r; i++)
        q[++cnt_q]=P(p[i].y,p[i].z,i);
    sort(q+1,q+cnt_q+1);
    for(int i=1; i<=cnt_q; i++)
    {
        if(q[i].z>m)f[q[i].z]+=bit.query(q[i].y);
        else bit.pd(q[i].y);
    }
    for(int i=1; i<=cnt_q; i++)
        if(q[i].z<=m)bit.clr(q[i].y);
    solve(m+1,r);
}

int main()
{
    //freopen("in.cpp","r",stdin);
    scanf("%d",&n);
    for(int i=1; i<=n; i++)
        scanf("%d%d%d",&p[i].x,&p[i].y,&p[i].z);
    sort(p+1,p+n+1);
    for(int i=1; i<=n; i++)f[i]=1;
    solve(1,n);
    ll ret=(ll)n*(n-1)/2;

    // for(int i=1; i<=n; i++)printf("** %d\n",f[i]);

    for(int i=1; i<=n; i++)ret-=(f[i]-1);
    printf("%I64d\n",ret);
    return 0;
}
