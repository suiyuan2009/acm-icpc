/*
题意：有m个题目，每个有难度值，有n个人，每天每人解决一个问题，且每个人有解决问题能力，
只有能力不小于难度才能解决该问题，问最少需要多少天解决完所有问题。
二分答案，双指针，优先队列
*/
#include<stdio.h>
#include<string.h>
#include<vector>
#include<algorithm>
#include<math.h>
#include<queue>
using namespace std;
const double eps=1e-6;
typedef long long ll;
const int maxn=100005;

int n,m,s;
struct P
{
    int b,c,idx;
    bool operator<(const P&a)const
    {
        return b<a.b;
    }
} a[maxn],p[maxn];

struct cmp
{
    bool operator()(const P &a,const P &b)const
    {
        return a.c>b.c;
    }
};
priority_queue<P,vector<P>,cmp>que;

int ans[maxn];
bool solve(int t)
{
    while(!que.empty())que.pop();
    int r=n,ret=0;
    for(int i=m; i>=1; i--)
    {
        while(r&&p[r].b>=a[i].b)
        {
            que.push(p[r]);
            r--;
        }
        if(que.empty())return 0;
        P tt=que.top();
        que.pop();
        ret+=tt.c;
        if(ret>s)return 0;
        for(int j=i; j&&j>i-t; j--)
            ans[a[j].idx]=tt.idx;
        i=i-t+1;
    }
    return 1;
}

int main()
{
    scanf("%d%d%d",&n,&m,&s);
    for(int i=1; i<=m; i++)
    {
        scanf("%d",&a[i].b);
        a[i].idx=i;
    }
    for(int i=1; i<=n; i++)
    {
        scanf("%d",&p[i].b);
        p[i].idx=i;
    }
    for(int i=1; i<=n; i++)
        scanf("%d",&p[i].c);
    sort(a+1,a+m+1);
    sort(p+1,p+n+1);
    int l=1,r=maxn;
    int ret=-1;
    while(l<=r)
    {
        int mid=(l+r)/2;
        if(solve(mid))
        {
            ret=mid;
            r=mid-1;
        }
        else l=mid+1;
    }
    if(ret==-1)printf("NO\n");
    else
    {
        printf("YES\n");
        solve(ret);
        for(int i=1; i<m; i++)
            printf("%d ",ans[i]);
        printf("%d\n",ans[m]);
    }
    return 0;
}
